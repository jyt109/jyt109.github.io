<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>edoc</title><link>http://jyt109/github.io</link><description>electronic documents about code</description><language>en</language><lastBuildDate>Sun, 05 Oct 2014 23:46:25 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>The Coin Change Problem</title><link>http://jyt109/posts/the-coin-change-problem.html</link><dc:creator>Jeffrey Tang</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Given some US coins and an amount of value in cents, return the minimum number of coins necessary for the exact value&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Loop through the coins &lt;strong&gt;sorted by descending order&lt;/strong&gt; (25, 10...)&lt;/li&gt;
&lt;li&gt;Take the &lt;strong&gt;rounded division&lt;/strong&gt; (Add that to the number of cumulative coins)&lt;/li&gt;
&lt;li&gt;Take the &lt;strong&gt;modulus and pass onto the next coin&lt;/strong&gt; in line&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://jyt109/posts/the-coin-change-problem.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Python</category><guid>http://jyt109/posts/the-coin-change-problem.html</guid><pubDate>Mon, 06 Oct 2014 06:36:30 GMT</pubDate></item><item><title>Profit Curves</title><link>http://jyt109/posts/profit-curves.html</link><dc:creator>Jeffrey Tang</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="profit-curves"&gt;Profit Curves&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Combining &lt;strong&gt;prediction&lt;/strong&gt; made by model &lt;strong&gt;and business requirements&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Calculate &lt;strong&gt;Expected Profit&lt;/strong&gt; based on how much a &lt;strong&gt;correct prediction makes us&lt;/strong&gt; and how much &lt;strong&gt;a false one costs us&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Based on where the &lt;strong&gt;Maximum Expected Profit (MEP)&lt;/strong&gt; is, we can then &lt;strong&gt;set the threshold for predicting +ve&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Other constraints such as how much the budget is, so we can only do &lt;strong&gt;MEP given budget limits&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://jyt109/posts/profit-curves.html"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Machine Learning</category><guid>http://jyt109/posts/profit-curves.html</guid><pubDate>Sun, 05 Oct 2014 03:08:57 GMT</pubDate></item><item><title>Support Vector Classifiers</title><link>http://jyt109/posts/suport-vector-classifiers.html</link><dc:creator>Jeffrey Tang</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="support-vector-classifier"&gt;Support Vector Classifier&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;One of the most &lt;strong&gt;accurate&lt;/strong&gt; (On par with Neural Nets)&lt;/li&gt;
&lt;li&gt;Takes a &lt;strong&gt;long time to train&lt;/strong&gt; (Much longer then Random Forest / Logit)&lt;/li&gt;
&lt;li&gt;Takes even &lt;strong&gt;longer to CrossValidate&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Sensitive to hyperparameters (Much tuning required - GridSearchCV)&lt;/li&gt;
&lt;li&gt;Still used in industry when the accurate is needed&lt;/li&gt;
&lt;li&gt;Continously training the SVM with a moving window of data&lt;/li&gt;
&lt;li&gt;Partial_fit might be able to speed things up&lt;/li&gt;
&lt;li&gt;Averaging of parameters on diff. subset of data can help too (Not in Python)&lt;/li&gt;
&lt;li&gt;Data should be &lt;strong&gt;scaled (z-score, Normal Standard)&lt;/strong&gt;, where in Random Forest, doesn't really matter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://jyt109/posts/suport-vector-classifiers.html"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Machine Learning</category><guid>http://jyt109/posts/suport-vector-classifiers.html</guid><pubDate>Sun, 05 Oct 2014 03:07:57 GMT</pubDate></item><item><title>Numpy Basics</title><link>http://jyt109/posts/numpy-basics.html</link><dc:creator>Jeffrey Tang</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="numpy-basics"&gt;Numpy Basics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Numpy comes with better built-ins than regular lists&lt;/li&gt;
&lt;li&gt;A lot of the times, numpy functions will take a regular list&lt;/li&gt;
&lt;li&gt;There are faster because they have broadcasting and the underlying C code&lt;/li&gt;
&lt;li&gt;Useful if you need to loop multiple times&lt;/li&gt;
&lt;li&gt;Slow/ annoying if you wanna append an element to np.array&lt;/li&gt;
&lt;li&gt;Sometimes have to reshape the array to 2d to do matrix dot product&lt;/li&gt;
&lt;li&gt;Always use shape if you wanna know the number of rows/ columns&lt;/li&gt;
&lt;li&gt;This will be a growing list&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://jyt109/posts/numpy-basics.html"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Numpy</category><category>Python</category><guid>http://jyt109/posts/numpy-basics.html</guid><pubDate>Fri, 03 Oct 2014 06:43:17 GMT</pubDate></item><item><title>Convert IPython Notebook to PDF</title><link>http://jyt109/posts/convert-ipython-notebook-to-pdf.html</link><dc:creator>Jeffrey Tang</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;You have done your&lt;/strong&gt; &lt;span style="color:#FF6A6A; font-weight:bold"&gt;data analysis in IPython Notebook ...&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Now you want it in a&lt;/strong&gt; &lt;span style="color:#add8e6; font-weight:bold"&gt;PDF as a report to show your boss ...&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTEBOOK --&amp;gt; PDF in under 5 mins&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Example product: &lt;a href="http://jyt109/posts/example.pdf"&gt;example.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;P.S. Instructions has only been tested on Mac Pro (Mavericks). User be cautious&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jyt109/posts/convert-ipython-notebook-to-pdf.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>IPython</category><guid>http://jyt109/posts/convert-ipython-notebook-to-pdf.html</guid><pubDate>Mon, 22 Sep 2014 03:07:57 GMT</pubDate></item><item><title>Python/IPython as a PostGres Client</title><link>http://jyt109/posts/postgres-database.html</link><dc:creator>Jeffrey Tang</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Using the default &lt;strong&gt;PostGres console&lt;/strong&gt; to write &lt;strong&gt;queries&lt;/strong&gt; is a &lt;span style="color:red; font-weight:bold"&gt;PAIN&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Trust me ... &lt;em&gt;&lt;strong&gt;Unless you are an SQL savant&lt;/strong&gt;&lt;/em&gt;, copy-and-pasting code into a console is not fun.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;IPython&lt;/em&gt;&lt;/strong&gt; makes &lt;strong&gt;PostGres Querying&lt;/strong&gt; much more bearable&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Python scripts&lt;/em&gt;&lt;/strong&gt; allows to &lt;strong&gt;recycle and run&lt;/strong&gt; the same Queries in the future easily&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jyt109/posts/postgres-database.html"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Database</category><category>IPython</category><guid>http://jyt109/posts/postgres-database.html</guid><pubDate>Fri, 12 Sep 2014 07:06:42 GMT</pubDate></item><item><title>Writing Shorter Loops in Python</title><link>http://jyt109/posts/all-sorts-of-list-comprehension.html</link><dc:creator>Jeffrey Tang</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;div class="figure"&gt;
&lt;img src="http://jyt109/posts/list_comp.png"&gt;
&lt;/div&gt;
&lt;p&gt;&lt;b&gt;Wanna &lt;span style="color:red"&gt;not&lt;/span&gt; write 3 lines of code every time you loop through a list ??&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;There are few ways to do so, namely &lt;strong&gt;List Comprehenison&lt;/strong&gt;, &lt;strong&gt;Map( )&lt;/strong&gt; and &lt;strong&gt;Lambda( )&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Here we are gonna cover &lt;strong&gt;when and how&lt;/strong&gt; to use these functions ...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jyt109/posts/all-sorts-of-list-comprehension.html"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Python</category><guid>http://jyt109/posts/all-sorts-of-list-comprehension.html</guid><pubDate>Sat, 06 Sep 2014 06:04:45 GMT</pubDate></item><item><title>The Anagram Problem</title><link>http://jyt109/posts/the-find-anagram-problem.html</link><dc:creator>Jeffrey Tang</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;div class="figure"&gt;
&lt;img src="http://jyt109/posts/doggod.png"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;It was an &lt;strong&gt;interview&lt;/strong&gt;, the &lt;strong&gt;coding kind&lt;/strong&gt; ...&lt;/p&gt;
&lt;p&gt;It was no &lt;strong&gt;&lt;a href="http://c2.com/cgi/wiki?FizzBuzzTest"&gt;FizzBuzz&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;It was &lt;strong&gt;Finding Anagrams&lt;/strong&gt; ...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anagrams&lt;/strong&gt; are words with different arrangement of letters.&lt;/p&gt;
&lt;p&gt;E.g. &lt;strong&gt;"dog" and "god"&lt;/strong&gt; &lt;span style="color:red"&gt;/&lt;/span&gt; &lt;strong&gt;"star", "arts" and "rats"&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br&gt; Let's dig into the code ...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jyt109/posts/the-find-anagram-problem.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Python</category><guid>http://jyt109/posts/the-find-anagram-problem.html</guid><pubDate>Fri, 05 Sep 2014 23:33:27 GMT</pubDate></item><item><title>Expected Value (With/Without replacement)</title><link>http://jyt109/posts/expected-value-withwithout-replacement.html</link><dc:creator>Jeffrey Tang</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;div class="figure"&gt;
&lt;img src="http://jyt109/posts/urn.png"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Do we &lt;strong&gt;&lt;em&gt;expect&lt;/em&gt;&lt;/strong&gt; the same number of &lt;span style="color:red"&gt;&lt;i&gt;&lt;b&gt;RED&lt;/b&gt;&lt;/i&gt;&lt;/span&gt; balls when drawn &lt;strong&gt;with/without replacement&lt;/strong&gt; ??&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;YES!&lt;/strong&gt; Turns out replacement matters not. &lt;br&gt;&lt;/p&gt;
&lt;p&gt;Let's prove by &lt;em&gt;&lt;strong&gt;simulating the two scenarios&lt;/strong&gt;&lt;/em&gt; ...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jyt109/posts/expected-value-withwithout-replacement.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Statistics</category><guid>http://jyt109/posts/expected-value-withwithout-replacement.html</guid><pubDate>Thu, 04 Sep 2014 22:56:56 GMT</pubDate></item></channel></rss>